// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.3
//   protoc               v5.28.2
// source: proto/item.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "item";

export interface ItemDto {
  id: string;
  quantity: number;
  productId: number;
}

export interface AddItemRequest {
  quantity: number;
  productId: number;
}

export interface AddItemResponse {
  item: ItemDto | undefined;
}

export interface GetItemRequest {
  id: string;
}

export interface GetItemResponse {
  item: ItemDto | undefined;
}

export interface DeleteItemRequest {
  id: string;
}

export interface DeleteItemResponse {
  success: boolean;
}

export const ITEM_PACKAGE_NAME = "item";

export interface ItemServiceClient {
  addItem(request: AddItemRequest): Observable<AddItemResponse>;

  getItem(request: GetItemRequest): Observable<GetItemResponse>;

  deleteItem(request: DeleteItemRequest): Observable<DeleteItemResponse>;
}

export interface ItemServiceController {
  addItem(request: AddItemRequest): Promise<AddItemResponse> | Observable<AddItemResponse> | AddItemResponse;

  getItem(request: GetItemRequest): Promise<GetItemResponse> | Observable<GetItemResponse> | GetItemResponse;

  deleteItem(
    request: DeleteItemRequest,
  ): Promise<DeleteItemResponse> | Observable<DeleteItemResponse> | DeleteItemResponse;
}

export function ItemServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["addItem", "getItem", "deleteItem"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ItemService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ItemService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ITEM_SERVICE_NAME = "ItemService";
